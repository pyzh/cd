.TH ssh_server_key_api 3 "ssh 4.6.9" "Ericsson AB" "Erlang Module Definition"
.SH NAME
ssh_server_key_api \- 
    -behaviour(ssh_server_key_api).
  
.SH DESCRIPTION
.LP
Behaviour describing the API for public key handling of an SSH server\&. By implementing the callbacks defined in this behavior, the public key handling of an SSH server can be customized\&. By default the SSH application implements this behavior with help of the standard OpenSSH files, see the \fB ssh(6)\fR\& application manual\&.
.SH "DATA TYPES"

.LP
Type definitions that are used more than once in this module, or abstractions to indicate the intended use of the data type, or both\&. For more details on public key data types, refer to Section 2 Public Key Records in the \fB public_key user\&'s guide\fR\&\&.
.RS 2
.TP 2
.B
\fIboolean() =\fR\&:
\fItrue | false\fR\&
.TP 2
.B
\fIstring() =\fR\&:
\fI[byte()]\fR\&
.TP 2
.B
\fIpublic_key() =\fR\&:
\fI#\&'RSAPublicKey\&'{} | {integer(),#\&'Dss-Parms\&'{}} | {#\&'ECPoint\&'{},{namedCurve,Curve::string()}}\fR\&
.TP 2
.B
\fIprivate_key() =\fR\&:
\fI#\&'RSAPrivateKey\&'{} | #\&'DSAPrivateKey\&'{} | #\&'ECPrivateKey\&'{}\fR\&
.TP 2
.B
\fIpublic_key_algorithm() =\fR\&:
\fI\&'ssh-rsa\&' | \&'ssh-dss\&' | \&'rsa-sha2-256\&' | \&'rsa-sha2-384\&' | \&'rsa-sha2-512\&' | \&'ecdsa-sha2-nistp256\&' | \&'ecdsa-sha2-nistp384\&' | \&'ecdsa-sha2-nistp521\&' \fR\&
.RE
.SH EXPORTS
.LP
.B
Module:host_key(Algorithm, DaemonOptions) -> {ok, Key} | {error, Reason}
.br
.RS
.LP
Types:

.RS 3
Algorithm = public_key_algorithm()
.br
.RS 2
Host key algorithm\&.
.RE
DaemonOptions = proplists:proplist()
.br
.RS 2
Options provided to \fBssh:daemon/[2,3]\fR\&\&. The option list given in the \fIkey_cb\fR\& option is available with the key \fIkey_cb_private\fR\&\&.
.RE
Key = private_key() | crypto:engine_key_ref()
.br
.RS 2
Private key of the host matching the \fIAlgorithm\fR\&\&. It may be a reference to a \&'ssh-rsa\&', rsa-sha2-* or \&'ssh-dss\&' (NOT ecdsa) key stored in a loaded Engine\&.
.RE
Reason = term()
.br
.RE
.RE
.RS
.LP
Fetches the private key of the host\&.
.RE
.LP
.B
Module:is_auth_key(Key, User, DaemonOptions) -> Result
.br
.RS
.LP
Types:

.RS 3
Key = public_key()
.br
.RS 2
Normally an RSA, DSA or ECDSA public key, but handling of other public keys can be added
.RE
User = string()
.br
.RS 2
User owning the public key\&.
.RE
DaemonOptions = proplists:proplist()
.br
.RS 2
Options provided to \fBssh:daemon/[2,3]\fR\&\&. The option list given in the \fIkey_cb\fR\& option is available with the key \fIkey_cb_private\fR\&\&.
.RE
Result = boolean()
.br
.RE
.RE
.RS
.LP
Checks if the user key is authorized\&.
.RE