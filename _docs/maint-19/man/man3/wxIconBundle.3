.TH wxIconBundle 3 "wx 1.8" "" "Erlang Module Definition"
.SH NAME
wxIconBundle \- See external documentation: wxIconBundle.
.SH DESCRIPTION
.LP
See external documentation: wxIconBundle\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
wxIconBundle():

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> \fBwxIconBundle()\fR\&
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Ic) -> \fBwxIconBundle()\fR\&
.br
.RS
.LP
Types:

.RS 3
Ic = \fBwxIconBundle()\fR\& | \fBwxIcon:wxIcon()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(File, Type) -> \fBwxIconBundle()\fR\&
.br
.RS
.LP
Types:

.RS 3
File = \fBunicode:chardata()\fR\&
.br
Type = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addIcon(This, Icon) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxIconBundle()\fR\&
.br
Icon = \fBwxIcon:wxIcon()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addIcon(This, File, Type) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxIconBundle()\fR\&
.br
File = \fBunicode:chardata()\fR\&
.br
Type = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getIcon(This) -> \fBwxIcon:wxIcon()\fR\&
.br
.RS
.LP
Types:

.RS 3
This = \fBwxIconBundle()\fR\&
.br
.RE
.RE
.RS
.LP
Equivalent to \fBgetIcon(This, [])\fR\&\&.
.RE
.LP
.B
getIcon(This, Options::[Option]) -> \fBwxIcon:wxIcon()\fR\&
.br
.RS
.LP
Types:

.RS 3
This = \fBwxIconBundle()\fR\&
.br
Option = {size, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Also:
.br
getIcon(This, Size) -> wxIcon:wxIcon() when
.br
This::wxIconBundle(), Size::{W::integer(), H::integer()}\&.
.br

.RE
.LP
.B
destroy(This::\fBwxIconBundle()\fR\&) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>