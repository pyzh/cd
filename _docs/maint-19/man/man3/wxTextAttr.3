.TH wxTextAttr 3 "wx 1.8" "" "Erlang Module Definition"
.SH NAME
wxTextAttr \- See external documentation: wxTextAttr.
.SH DESCRIPTION
.LP
See external documentation: wxTextAttr\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
wxTextAttr():

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> \fBwxTextAttr()\fR\&
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(ColText) -> \fBwxTextAttr()\fR\&
.br
.RS
.LP
Types:

.RS 3
ColText = \fBwx:wx_colour()\fR\&
.br
.RE
.RE
.RS
.LP
Equivalent to \fBnew(ColText, [])\fR\&\&.
.RE
.LP
.B
new(ColText, Options::[Option]) -> \fBwxTextAttr()\fR\&
.br
.RS
.LP
Types:

.RS 3
ColText = \fBwx:wx_colour()\fR\&
.br
Option = {colBack, \fBwx:wx_colour()\fR\&} | {font, \fBwxFont:wxFont()\fR\&} | {alignment, \fBwx:wx_enum()\fR\&}
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Alignment = ?wxTEXT_ALIGNMENT_DEFAULT | ?wxTEXT_ALIGNMENT_LEFT | ?wxTEXT_ALIGNMENT_CENTRE | ?wxTEXT_ALIGNMENT_CENTER | ?wxTEXT_ALIGNMENT_RIGHT | ?wxTEXT_ALIGNMENT_JUSTIFIED
.RE
.LP
.B
getAlignment(This) -> \fBwx:wx_enum()\fR\&
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Res = ?wxTEXT_ALIGNMENT_DEFAULT | ?wxTEXT_ALIGNMENT_LEFT | ?wxTEXT_ALIGNMENT_CENTRE | ?wxTEXT_ALIGNMENT_CENTER | ?wxTEXT_ALIGNMENT_RIGHT | ?wxTEXT_ALIGNMENT_JUSTIFIED
.RE
.LP
.B
getBackgroundColour(This) -> \fBwx:wx_colour4()\fR\&
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getFont(This) -> \fBwxFont:wxFont()\fR\&
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getLeftIndent(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getLeftSubIndent(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getRightIndent(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getTabs(This) -> [integer()]
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getTextColour(This) -> \fBwx:wx_colour4()\fR\&
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasBackgroundColour(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasFont(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasTextColour(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getFlags(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isDefault(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setAlignment(This, Alignment) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
Alignment = \fBwx:wx_enum()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Alignment = ?wxTEXT_ALIGNMENT_DEFAULT | ?wxTEXT_ALIGNMENT_LEFT | ?wxTEXT_ALIGNMENT_CENTRE | ?wxTEXT_ALIGNMENT_CENTER | ?wxTEXT_ALIGNMENT_RIGHT | ?wxTEXT_ALIGNMENT_JUSTIFIED
.RE
.LP
.B
setBackgroundColour(This, ColBack) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
ColBack = \fBwx:wx_colour()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFlags(This, Flags) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
Flags = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFont(This, Font) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
Font = \fBwxFont:wxFont()\fR\&
.br
.RE
.RE
.RS
.LP
Equivalent to \fBsetFont(This, Font, [])\fR\&\&.
.RE
.LP
.B
setFont(This, Font, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
Font = \fBwxFont:wxFont()\fR\&
.br
Option = {flags, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setLeftIndent(This, Indent) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
Indent = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to \fBsetLeftIndent(This, Indent, [])\fR\&\&.
.RE
.LP
.B
setLeftIndent(This, Indent, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
Indent = integer()
.br
Option = {subIndent, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setRightIndent(This, Indent) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
Indent = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setTabs(This, Tabs) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
Tabs = [integer()]
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setTextColour(This, ColText) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxTextAttr()\fR\&
.br
ColText = \fBwx:wx_colour()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::\fBwxTextAttr()\fR\&) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>