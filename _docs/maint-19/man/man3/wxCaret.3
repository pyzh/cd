.TH wxCaret 3 "wx 1.8" "" "Erlang Module Definition"
.SH NAME
wxCaret \- See external documentation: wxCaret.
.SH DESCRIPTION
.LP
See external documentation: wxCaret\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
wxCaret():

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new(Window, Size) -> \fBwxCaret()\fR\&
.br
.RS
.LP
Types:

.RS 3
Window = \fBwxWindow:wxWindow()\fR\&
.br
Size = {W::integer(), H::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Window, Width, Height) -> \fBwxCaret()\fR\&
.br
.RS
.LP
Types:

.RS 3
Window = \fBwxWindow:wxWindow()\fR\&
.br
Width = integer()
.br
Height = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This, Window, Size) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
Window = \fBwxWindow:wxWindow()\fR\&
.br
Size = {W::integer(), H::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This, Window, Width, Height) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
Window = \fBwxWindow:wxWindow()\fR\&
.br
Width = integer()
.br
Height = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getBlinkTime() -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPosition(This) -> {X::integer(), Y::integer()}
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSize(This) -> {W::integer(), H::integer()}
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getWindow(This) -> \fBwxWindow:wxWindow()\fR\&
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hide(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isOk(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isVisible(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
move(This, Pt) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
Pt = {X::integer(), Y::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
move(This, X, Y) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
X = integer()
.br
Y = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setBlinkTime(Milliseconds) -> ok
.br
.RS
.LP
Types:

.RS 3
Milliseconds = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setSize(This, Size) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
Size = {W::integer(), H::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setSize(This, Width, Height) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
Width = integer()
.br
Height = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
show(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
.RE
.RE
.RS
.LP
Equivalent to \fBshow(This, [])\fR\&\&.
.RE
.LP
.B
show(This, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = \fBwxCaret()\fR\&
.br
Option = {show, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::\fBwxCaret()\fR\&) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>